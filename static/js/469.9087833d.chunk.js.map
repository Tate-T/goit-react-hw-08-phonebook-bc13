{"version":3,"file":"static/js/469.9087833d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook-bc13/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook-bc13/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook-bc13/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook-bc13/./src/views/PhonebookView/PhonebookView.module.css?50e9","views/PhonebookView/PhonebookView.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"phonebookForm\":\"ContactForm_phonebookForm__lr+0E\",\"title\":\"ContactForm_title__96vG8\",\"input\":\"ContactForm_input__fYtTQ\"};","import { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contactsOperations';\r\n\r\nconst ContactForm = ({ contacts, onSubmitAddContact }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const isLoading = useSelector(state => state.contacts.isLoading);\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        switch (name) {\r\n            case \"name\": setName(value);\r\n                break;\r\n            case \"number\": setNumber(value);\r\n                break;\r\n            default: return\r\n        }\r\n    }\r\n\r\n    const isThereThisContact = (payload) => {\r\n        return contacts?.some(\r\n            contact => contact.name.toLowerCase() === payload,\r\n        );\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(addContact({ name, number }));\r\n        if (isThereThisContact(name)) {\r\n            alert(`${name} already exist`)\r\n            return\r\n        }\r\n\r\n        onSubmitAddContact({ name, number })\r\n\r\n        setName('');\r\n        setNumber('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div className={s.phonebookForm}>\r\n                <label className={s.title}>Name\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                        required\r\n                        className={s.input}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </label>\r\n                <label className={s.title}>Number\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                        required\r\n                        className={s.input}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </label>\r\n            </div>\r\n            <button type=\"submit\" >Add contact</button>\r\n            {isLoading && <h3>Loading...</h3>}\r\n        </form >\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitAddContact: (contact) => dispatch(addContact(contact)),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","// extracted by mini-css-extract-plugin\nexport default {\"contactsSection\":\"ContactList_contactsSection__WpmMR\",\"contactsTitle\":\"ContactList_contactsTitle__GL-9A\",\"contactsList\":\"ContactList_contactsList__X5QsI\",\"contactsItem\":\"ContactList_contactsItem__i6AoF\",\"contactName\":\"ContactList_contactName__tHCDK\",\"deleteBtn\":\"ContactList_deleteBtn__9Xwd0\"};","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact, findContact } from '../../redux/contacts/contactsOperations';\r\n\r\nconst ContactList = ({ filter, contacts, deleteContact }) => {\r\n    const findContact = () => {\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(filter?.toLowerCase())\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={s.contactsSection}>\r\n            <h2 className={s.contactsTitle}>Contacts:</h2>\r\n            <ul className={s.contactsList} >\r\n                {findContact().map(contact => (\r\n                    <li className={s.contactsItem} key={contact.id}>\r\n                        <p className={s.contactName}>{contact.name}: {contact.number}</p>\r\n                        <button type=\"button\" className={s.deleteBtn} onClick={() => deleteContact(contact.id)}>\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contacts: state.contacts,\r\n        filter: state.filter\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteContact: (id) => dispatch(deleteContact(id)),\r\n        findContact: (id) => dispatch(findContact(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__NmfY5\",\"filterTitle\":\"Filter_filterTitle__mP7V4\",\"filterInput\":\"Filter_filterInput__8ocIY\"};","import { connect } from 'react-redux';\r\nimport { addToFilterState } from '../../redux/contacts/filterAction';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, addToFilterState }) => {\r\n\r\n    return (\r\n        <div className={s.filter}>\r\n            <label className={s.filterTitle}>\r\n                Find contact by name\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    value={filter}\r\n                    onChange={(e) => { addToFilterState(e.target.value) }}\r\n                    className={s.filterInput}\r\n                />\r\n            </label>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filter: state.filter\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToFilterState: (filter) => dispatch(addToFilterState(filter)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PhonebookView_form__vfK0Q\",\"contactsList\":\"PhonebookView_contactsList__I77V6\"};","import { useEffect } from 'react';\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\nimport ContactList from '../../components/ContactList/ContactList';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport s from './PhonebookView.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contactsOperations';\r\n\r\nconst Phonebook = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getContacts());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            <h1>Phonebook</h1>\r\n            <ContactForm />\r\n            <div className={s.contactsList}>\r\n                <ContactList />\r\n                <Filter />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Phonebook;","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["connect","dispatch","onSubmitAddContact","contact","addContact","contacts","useDispatch","isLoading","useSelector","state","useState","name","setName","number","setNumber","handleInputChange","e","currentTarget","value","onSubmit","payload","preventDefault","some","toLowerCase","alert","className","s","type","pattern","title","required","onChange","filter","deleteContact","id","findContact","includes","map","onClick","addToFilterState","target","useEffect","getContacts","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}